<?php

namespace App\Services;

use App\Entities\Product;
use App\Legacy\Services\ProdutoService;
use App\Services\Padrao\ServiceAbstract;

/**
 * Created by PhpStorm.
 * User: tsousa
 * Date: 08/07/2016
 * Time: 10:46
 */
class ProductService extends ServiceAbstract
{
    protected $produtoService;

    /**
     * ProductService constructor.
     * @param $produtoService
     */
    public function __construct(ProdutoService $produtoService)
    {
        $this->produtoService = $produtoService;
    }

    function makeEntity()
    {
        return app(Product::class);
    }
    
    
    public function create(array $data)
    {
        try {

            $this->db->beginTransacion();

            $dadosProduto = [
                'idCategoria' => $data['categoryId'],
                'nomeProduto' => $data['productName'],
                'precoProduto' => $data['productPrice'],
                'descricaoProduto' => $data['productDescription']
            ];

            $this->produtoService->create($dadosProduto);

            $produto = parent::create($data); // TODO: Change the autogenerated stub

            $this->db->commit();

            return $produto;

        }catch (\Exception $e){
            $this->db->rollback();
            throw $e;
        }
    }
    
    public function update(array $data, $id)
    {
        try {

            $this->db->beginTransacion();

            $dadosProduto = [
                'idCategoria' => $data['categoryId'],
                'nomeProduto' => $data['productName'],
                'precoProduto' => $data['productPrice'],
                'descricaoProduto' => $data['productDescription']
            ];

            $this->produtoService->update($dadosProduto, $id);

            $produto = parent::update($data, $id); // TODO: Change the autogenerated stub

            $this->db->commit();

            return $produto;

        }catch (\Exception $e){
            $this->db->rollback();
            throw $e;
        }

    }

    public function destroy($id)
    {
        try {

            $this->db->beginTransacion();

            $this->produtoService->destroy($id);

            $produto = parent::destroy($id); // TODO: Change the autogenerated stub

            $this->db->commit();

            return $produto;

        }catch (\Exception $e){
            $this->db->rollback();
            throw $e;
        }

    }


}